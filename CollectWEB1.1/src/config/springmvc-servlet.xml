<?xml version="1.0" encoding="UTF-8"?><beans xmlns="http://www.springframework.org/schema/beans"	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"       xmlns:context="http://www.springframework.org/schema/context"       xmlns:mvc="http://www.springframework.org/schema/mvc"       xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">		<!-- scan the package and the sub package -->    <context:component-scan base-package="com.coll.service"/>	<context:component-scan base-package="com.coll.util"/>    <!--配置扫描包,这个SpringMVC容器中只扫描control的bean-->    <context:component-scan base-package="com.coll.control" use-default-filters="false">        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>    </context:component-scan>	<mvc:interceptors>          <!-- 多个拦截器，顺序执行 -->          <mvc:interceptor>              <mvc:mapping path="/sec/**"/>            <bean class="com.coll.interceptor.LoginInterceptor"></bean>          </mvc:interceptor>      </mvc:interceptors>    <!--添加资源文件映射-->    <mvc:annotation-driven/>    <mvc:resources mapping="/js/**" location="/js/"/>    <mvc:resources mapping="/css/**" location="/css/"/>    <mvc:resources mapping="/ckeditor/**" location="/ckeditor/"/>    <mvc:resources mapping="/ico/**" location="/ico/"/>    <mvc:resources mapping="/fonts/**" location="/fonts/"/>    <mvc:resources mapping="/config/**" location="/config/"/>    <!--配置视图解析器，并指定视图所在的文件夹-->    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>        <property name="contentType" value="text/thml"/>        <property name="prefix" value="/jsps/"/>        <property name="suffix" value=".jsp"/>    </bean>	<!--通过一个 BeanPostProcessor 对 @Autowired 进行解析，所以要让 @Autowired 起作用必须事先在 Spring 容器中声明 AutowiredAnnotationBeanPostProcessor Bean-->    <bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"/>    	<bean class="org.springframework.beans.factory.annotation.RequiredAnnotationBeanPostProcessor"/>	 	<!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" />        <!--配置mysql数据库链接信息-->    <!-- 定义个缺省的控制适配器 -->    <bean class="org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter"/>    <!-- 获取配置文件 -->    <bean id="config" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">        <property name="locations">            <list>                <value>classpath:config/db-config.properties</value>            </list>        </property>    </bean>    <!-- c3p0获取数据源 -->    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">        <property name="driverClass">            <value>${db.dirverClass}</value>        </property>        <property name="jdbcUrl">            <value>${db.url}</value>        </property>        <property name="user">            <value>${db.username}</value>        </property>        <property name="password">            <value>${db.password}</value>        </property>    </bean>        <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">        <property name="dataSource" ref="dataSource"/>    </bean>    <bean id="urlContentDao" class="com.coll.dao.UrlContentDaoImpl">        <property name="jdbcTemplate" ref="jdbcTemplate"/>    </bean>    <bean id="userInfoDao" class="com.coll.dao.UserinfoDaoImpl">        <property name="jdbcTemplate" ref="jdbcTemplate"/>    </bean>	<bean id="quickDao" class="com.coll.dao.QuickDaoImpl">        <property name="jdbcTemplate" ref="jdbcTemplate"/>    </bean>    </beans>